name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}//Build-Windows

    - uses: webfactory/ssh-agent@v0.5.0
    - name: Setup key
      uses: ./
      with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}


    - name: Fetch dependencies - begin
      shell: cmd
      working-directory: ${{github.workspace}}
      env:
                    SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: git submodule update --recursive --init

    - name: Fetch dependencies - second
      shell: cmd
      working-directory: ${{github.workspace}}
      run: git submodule update --recursive --init

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: cmd
      working-directory: ${{github.workspace}}/Build-Windows
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}//Build-Windows
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE -j16

    - name: Test
      working-directory: ${{github.workspace}}/runDir
      run: ../Build-Windows/culTests.exe
