ARCH := $(shell getconf LONG_BIT)
ifeq ($(OS),Windows_NT)
DYN_LIB_EXT := .dll
BUILD_ROOT := Build-Cygwin
else
DYN_LIB_EXT := .so
BUILD_ROOT := Build-Linux
endif

DIAG_FLAG := -fdiagnostics-color=always
COMPILER := g++
#COMPILER := clang++-6.0
CC := $(COMPILER) $(DIAG_FLAG) -fPIC
CC_LINK := $(COMPILER) $(DIAG_FLAG) -shared -fPIC
CPP_VERSION := --std=c++17
COMPILER_FLAGS = -pedantic -Wall $(CPP_VERSION) -Werror
TEST := -Wno-ignored-attributes

DEBUG_FLAGS = -ggdb3
RELEASE_FLAGS = -Ofast
PROJECT_NAME = libcul
IMP_LIB_NAME = $(PROJECT_NAME).a
OUTPUT_DIR := ../$(BUILD_ROOT)
OUTPUT_DIR_DEBUG = $(OUTPUT_DIR)/Debug
OUTPUT_DIR_RELEASE = $(OUTPUT_DIR)/Release

#DEPS
HOME_DEPS := ../deps

#BOOST ASSERT
BOOST_ASSERT := $(HOME_DEPS)/assert
BOOST_ASSERT_INC := $(BOOST_ASSERT)/include

#BOOST CIRCULAR BUFFER
BOOST_CIRCULAR_BUFFER := $(HOME_DEPS)/circular_buffer
BOOST_CIRCULAR_BUFFER_INC := $(BOOST_CIRCULAR_BUFFER)/include

#BOOST CONFIG
BOOST_CONFIG := $(HOME_DEPS)/config
BOOST_CONFIG_INC := $(BOOST_CONFIG)/include

#BOOST CORE
BOOST_CORE := $(HOME_DEPS)/core
BOOST_CORE_INC := $(BOOST_CORE)/include

#BOOST CONCEPT CHECK
BOOST_CONCEPT_CHECK := $(HOME_DEPS)/concept_check
BOOST_CONCEPT_CHECK_INC := $(BOOST_CONCEPT_CHECK)/include

#BOOST MOVE
BOOST_MOVE := $(HOME_DEPS)/move
BOOST_MOVE_INC := $(BOOST_MOVE)/include

#BOOST PREPROCESSOR
BOOST_PREPROCESSOR := $(HOME_DEPS)/preprocessor
BOOST_PREPROCESSOR_INC := $(BOOST_PREPROCESSOR)/include

#BOOST STATIC ASSERT
BOOST_STATIC_ASSERT := $(HOME_DEPS)/static_assert
BOOST_STATIC_ASSERT_INC := $(BOOST_STATIC_ASSERT)/include

#BOOST THROW EXCEPTION
BOOST_THROW_EXCEPTION := $(HOME_DEPS)/throw_exception
BOOST_THROW_EXCEPTION_INC := $(BOOST_THROW_EXCEPTION)/include

#BOOST TYPE TRAITS
BOOST_TYPE_TRAITS := $(HOME_DEPS)/type_traits
BOOST_TYPE_TRAITS_INC := $(BOOST_TYPE_TRAITS)/include

#RAPIDJSON
RAPIDJSON_HOME := $(HOME_DEPS)/rapidjson
RAPIDJSON_INCLUDE := $(RAPIDJSON_HOME)/include

# SPDLOG
SPDLOG_HOME := $(HOME_DEPS)/spdlog
SPDLOG_INCLUDE := $(SPDLOG_HOME)/include

HEADER_INC := -I inc
HEADER_INC += -I $(BOOST_ASSERT_INC)
HEADER_INC += -I $(BOOST_CIRCULAR_BUFFER_INC)
HEADER_INC += -I $(BOOST_CONFIG_INC)
HEADER_INC += -I $(BOOST_CONCEPT_CHECK_INC)
HEADER_INC += -I $(BOOST_CORE_INC)
HEADER_INC += -I $(BOOST_MOVE_INC)
HEADER_INC += -I $(BOOST_PREPROCESSOR_INC)
HEADER_INC += -I $(BOOST_STATIC_ASSERT_INC)
HEADER_INC += -I $(BOOST_THROW_EXCEPTION_INC)
HEADER_INC += -I $(BOOST_TYPE_TRAITS_INC)
HEADER_INC += -I $(RAPIDJSON_INCLUDE)
HEADER_INC += -I $(SPDLOG_INCLUDE)
HEADER_INC += -I src

OUTPUT_DEBUG = $(OUTPUT_DIR_DEBUG)/$(DLL_NAME)
OUTPUT_RELEASE = $(OUTPUT_DIR_RELEASE)/$(DLL_NAME)
IMP_LIB_DEBUG = $(OUTPUT_DIR_DEBUG)/$(IMP_LIB_NAME)
IMP_LIB_RELEASE = $(OUTPUT_DIR_RELEASE)/$(IMP_LIB_NAME)

IMP_LIBS := $(shell pkg-config --libs libpng)
IMP_LIBS += $(shell pkg-config --libs IL)
IMP_LIBS += $(shell pkg-config --libs ILU)
IMP_LIBS += $(shell pkg-config --libs ILUT)
IMP_LIBS += -lstdc++fs

CPP_FILES := $(wildcard src/*.cpp)
CPP_FILES += $(wildcard src/*/*.cpp)

# OBJ:
OBJ_DEBUG_DIR := $(OUTPUT_DIR_DEBUG)/obj/debug/
OBJ_RELEASE_DIR := $(OUTPUT_DIR_DEBUG)/obj/release/
OBJ_DEBUG_FILES := $(addprefix $(OBJ_DEBUG_DIR),$(CPP_FILES:.cpp=.o))
OBJ_RELEASE_FILES := $(addprefix $(OBJ_RELEASE_DIR),$(CPP_FILES:.cpp=.o))

DLL_NAME = $(PROJECT_NAME)$(DYN_LIB_EXT)

debug: $(OUTPUT_DEBUG)
release: $(OUTPUT_RELEASE)

$(OUTPUT_DEBUG): $(OBJ_DEBUG_FILES)
	@mkdir -p $(@D)
	$(CC_LINK) -o $(OUTPUT_DEBUG) $(OBJ_DEBUG_FILES) $(IMP_LIBS) $(IMPORT_LIBS_DEBUG)

$(OUTPUT_RELEASE): $(OBJ_RELEASE_FILES)
	@mkdir -p $(@D)
	$(CC_LINK) -o $(OUTPUT_RELEASE) $(OBJ_RELEASE_FILES) $(IMP_LIBS) $(RELEASE_FLAGS) $(IMPORT_LIBS_RELEASE)

# Replace $< (first dependency) with $^ (all dependencies).

$(OBJ_DEBUG_DIR)%.o: %.cpp
	@mkdir -p $(dir $@)
	$(CC) $(HEADER_INC) $(COMPILER_FLAGS) $(DEBUG_FLAGS) -c -o $@ $<

$(OBJ_RELEASE_DIR)%.o: %.cpp %.hpp
	@mkdir -p $(dir $@)
	$(CC) $(HEADER_INC) $(COMPILER_FLAGS) $(RELEASE_FLAGS) -c -o $@ $^

clean:
	rm -rf $(OUTPUT_DIR)